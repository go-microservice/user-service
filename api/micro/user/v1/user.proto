syntax = "proto3";

package micro.user.v1;

option go_package = "github.com/go-microservice/user-service/api/micro/user/v1;v1";

service UserService {
  rpc Register(RegisterRequest) returns (RegisterReply) {}
  rpc Login(LoginRequest) returns (LoginReply) {}
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileReply) {}
  rpc UpdatePassword(UpdatePasswordRequest) returns (UpdatePasswordReply) {}
  rpc GetUser(GetUserRequest) returns (GetUserReply) {}
  rpc BatchGetUsers(BatchGetUsersRequest) returns (BatchGetUsersReply) {}
}

enum StatusType {
  UNKNOWN = 0;
  NORMAL = 1;
  DELETE = 2;
  Ban = 3;
}

// user base info
message UserBase {
  int64 id = 1;
  string username = 2;
  string email =3;
  string phone = 4;
  int64 login_at = 5;
  StatusType status = 6;
  int64 created_at = 7;
  int64 updated_at = 8;
}

// user profile
message UserProfile {
  enum GenderType {
    UNKNOWN = 0;
    MALE = 1;
    FEMALE = 2;
  };
  int64 user_id = 1;
  string nickname = 2;
  string avatar = 3;
  GenderType gender = 4;
  string string = 5;
  string bio = 6;
}

// finally output to client
message User {
  enum GenderType {
    UNKNOWN = 0;
    MALE = 1;
    FEMALE = 2;
  };
  int64 id = 1;
  string username = 2;
  string email =3;
  string phone = 4;
  int64  login_at = 5;
  StatusType status = 6;
  string nickname = 7;
  string avatar = 8;
  GenderType gender = 9;
  string birthday = 10;
  string bio = 11;
  int64 created_at = 12;
  int64 updated_at = 13;
}

message RegisterRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message RegisterReply {
  int64 id = 1;
  string username = 2;
}

message LoginRequest {
  string username = 1;
  string email = 2;
  string password = 3;
}

message LoginReply {
  string token = 1;
}

message UpdateProfileRequest {
  string id = 1;
  string password = 2;
}

message UpdateProfileReply {
  User user = 1;
}

message UpdatePasswordRequest {
  string user_id = 1;
  string password = 2;
}

message UpdatePasswordReply {

}

message GetUserRequest {
  int64 id = 1;
}

message GetUserReply {
  User user = 1;
}

message BatchGetUsersRequest {
  string ids = 1;
}

message BatchGetUsersReply {
  repeated User users = 1;
}